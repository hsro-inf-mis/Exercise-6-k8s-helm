apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "icndb.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "icndb.name" . }}
    helm.sh/chart: {{ include "icndb.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "icndb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "icndb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.icndb.image.repository -}}:{{- .Values.icndb.image.tag }}"
          imagePullPolicy: {{ .Values.icndb.image.pullPolicy }}
          env:
            - name: VERTICLES_COUNT
              value: {{ .Values.icndb.verticlesCount | quote }}
            - name: JDBC_HOSTNAME
              value: localhost
            - name: JDBC_DATABASE
              value: jericho
            - name: JDBC_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "icndb.fullname" . -}}-jdbc-secret
                  key: JDBC_USERNAME
            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "icndb.fullname" . -}}-jdbc-secret
                  key: JDBC_PASSWORD
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 2
            failureThreshold: 10
            httpGet:
              path: /api/v1/jokes/random
              port: http
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              path: /api/v1/jokes/random
              port: http
          resources:
{{ toYaml .Values.icndb.resources | indent 12 }}
        - name: postgres
          image: "{{ .Values.db.image.repository -}}:{{- .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: 'jericho'
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "icndb.fullname" . -}}-jdbc-secret
                  key: JDBC_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "icndb.fullname" . -}}-jdbc-secret
                  key: JDBC_PASSWORD
          resources:
{{ toYaml .Values.db.resources | indent 12 }}
